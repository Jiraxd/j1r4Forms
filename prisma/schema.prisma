// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model SharableLinkForm {
  formid         String
  link           String   @id @default(cuid())
  expirationDate DateTime
}

model SavedForm {
  formid           String         @id @default(cuid())
  name             String
  authorID         String
  formtitle        String
  formdescription  String
  fields           FormField[]
  answersfromusers UserAnswered[]
}

model FormField {
  fieldID         Int          @id @default(autoincrement())
  fieldTitle      String
  fieldAnswerType Int
  formid          String
  position        Int
  Answers         FormAnswer[]
  SavedForm       SavedForm?   @relation(fields: [formid], references: [formid])
}

model FormAnswer {
  formfield  FormField @relation(fields: [fieldID], references: [fieldID])
  fieldID    Int
  answerID   String    @id @default(cuid())
  answerType Int
  answerName String
  answerPos  Int
}

model UserAnswered {
  id           String    @id @default(cuid())
  form         SavedForm @relation(fields: [formid], references: [formid])
  formid       String
  useranswerid String
  answer       Json
}
